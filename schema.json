{
    "openapi": "3.0.0",
    "info": {
        "version": "2.0",
        "title": "Customer API",
        "description": "Simple CRUD Customer API in Golang with postgres database"
    },
    "servers": [
        {
            "url": "http://localhost:8080/v2"
        }
    ],
    "paths": {
        "/users": {
            "get": {
                "summary": "ListAllCustomers: Returns all customers in the database",
                "operationId": "listUsers",
                "tags": [
                    "listAll"
                ],
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "number of queries",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "offset of queries",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response: List of users returned",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Wrong Method",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/{id}": {
            "get": {
                "summary": "getCustomer: Get customer with id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of user to return",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User found in database and returned",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found in database",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user": {
            "get": {
                "summary": "searchCustomer: Get customer with email and first_name",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": "email of user to search",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "first_name",
                        "in": "query",
                        "description": "first name of user to search",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User found in database and returned",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found in database",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "createCustomer: Create customer with given details",
                "requestBody": {
                    "description": "Customer to add to the database",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            },
                            "examples": {
                                "validUser": {
                                    "summary": "An example of valid user",
                                    "value": {
                                        "id": "34",
                                        "first_name": "Arnav",
                                        "last_name": "Dixit",
                                        "email": "arnavdixit@email.com",
                                        "phone": 7310434567
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User found in database and returned",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found in database",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "deleteCustomer: Delete customer with id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "id of user to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "User successfully deleted"
                    },
                    "400": {
                        "description": "Invalid Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found in database",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "updateCustomer: Update customer with given details",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "id of user to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated customer details",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            },
                            "examples": {
                                "updatedUserUser": {
                                    "summary": "An example of updated user details",
                                    "value": {
                                        "id": "34",
                                        "first_name": "Arnav",
                                        "last_name": "Dixit",
                                        "email": "arnavdixit127@gmail.com",
                                        "phone": 7310222567
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated in database and returned",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found in database",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "updateCustomer: Update customer with given details",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "id of user to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated customer details only the provided fields",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            },
                            "examples": {
                                "updatedUserUser": {
                                    "summary": "An example of updated user details with only updated fields provided",
                                    "value": {
                                        "id": "34",
                                        "email": "arnavdixit127@gmail.com",
                                        "phone": 7310222567
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated in database and returned",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found in database",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "User": {
                "type": "object",
                "required": [
                    "id",
                    "first_name",
                    "last_name",
                    "email",
                    "phone"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "phone": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "Users": {
                "type": "array",
                "required": [
                    "User"
                ]
            },
            "Error": {
                "type": "object",
                "required": [
                    "message"
                ],
                "properties": {
                    "message": {
                        "type": "string"
                    }
                }
            }
        }
    }
}